[
    Arm {
        attrs: [],
        pat: Pat::Struct {
            attrs: [],
            qself: None,
            path: Path {
                leading_colon: None,
                segments: [
                    PathSegment {
                        ident: Ident(
                            Foo,
                        ),
                        arguments: PathArguments::AngleBracketed {
                            colon2_token: Some(
                                PathSep,
                            ),
                            lt_token: Lt,
                            args: [
                                GenericArgument::Type(
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        T,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            ],
                            gt_token: Gt,
                        },
                    },
                ],
            },
            brace_token: Brace,
            fields: [
                FieldPat {
                    attrs: [],
                    member: Member::Named(
                        Ident(
                            a,
                        ),
                    ),
                    colon_token: Some(
                        Colon,
                    ),
                    pat: Pat::Lit {
                        attrs: [],
                        lit: Lit::Int {
                            token: 1,
                        },
                    },
                },
                Comma,
                FieldPat {
                    attrs: [],
                    member: Member::Named(
                        Ident(
                            b,
                        ),
                    ),
                    colon_token: Some(
                        Colon,
                    ),
                    pat: Pat::Lit {
                        attrs: [],
                        lit: Lit::Int {
                            token: 2,
                        },
                    },
                },
            ],
            rest: None,
        },
        guard: None,
        fat_arrow_token: FatArrow,
        body: Expr::Block {
            attrs: [],
            label: None,
            block: Block {
                brace_token: Brace,
                stmts: [],
            },
        },
        comma: None,
    },
    Arm {
        attrs: [],
        pat: Pat::Struct {
            attrs: [],
            qself: None,
            path: Path {
                leading_colon: None,
                segments: [
                    PathSegment {
                        ident: Ident(
                            Foo,
                        ),
                        arguments: PathArguments::AngleBracketed {
                            colon2_token: Some(
                                PathSep,
                            ),
                            lt_token: Lt,
                            args: [
                                GenericArgument::Type(
                                    Type::Path {
                                        qself: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        T,
                                                    ),
                                                    arguments: PathArguments::None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            ],
                            gt_token: Gt,
                        },
                    },
                ],
            },
            brace_token: Brace,
            fields: [
                FieldPat {
                    attrs: [],
                    member: Member::Named(
                        Ident(
                            a,
                        ),
                    ),
                    colon_token: None,
                    pat: Pat::Ident {
                        attrs: [],
                        by_ref: None,
                        mutability: None,
                        ident: Ident(
                            a,
                        ),
                        subpat: None,
                    },
                },
                Comma,
                FieldPat {
                    attrs: [],
                    member: Member::Named(
                        Ident(
                            b,
                        ),
                    ),
                    colon_token: None,
                    pat: Pat::Ident {
                        attrs: [],
                        by_ref: None,
                        mutability: None,
                        ident: Ident(
                            b,
                        ),
                        subpat: None,
                    },
                },
            ],
            rest: None,
        },
        guard: None,
        fat_arrow_token: FatArrow,
        body: Expr::Block {
            attrs: [],
            label: None,
            block: Block {
                brace_token: Brace,
                stmts: [],
            },
        },
        comma: None,
    },
    Arm {
        attrs: [],
        pat: Pat::TupleStruct {
            attrs: [],
            qself: None,
            path: Path {
                leading_colon: None,
                segments: [
                    PathSegment {
                        ident: Ident(
                            Foo,
                        ),
                        arguments: PathArguments::None,
                    },
                ],
            },
            paren_token: Paren,
            elems: [
                Pat::Ident {
                    attrs: [],
                    by_ref: None,
                    mutability: None,
                    ident: Ident(
                        CACHE,
                    ),
                    subpat: None,
                },
            ],
        },
        guard: None,
        fat_arrow_token: FatArrow,
        body: Expr::Block {
            attrs: [],
            label: None,
            block: Block {
                brace_token: Brace,
                stmts: [],
            },
        },
        comma: None,
    },
    Arm {
        attrs: [],
        pat: Pat::Struct {
            attrs: [],
            qself: None,
            path: Path {
                leading_colon: None,
                segments: [
                    PathSegment {
                        ident: Ident(
                            Foo,
                        ),
                        arguments: PathArguments::None,
                    },
                ],
            },
            brace_token: Brace,
            fields: [
                FieldPat {
                    attrs: [],
                    member: Member::Named(
                        Ident(
                            a,
                        ),
                    ),
                    colon_token: Some(
                        Colon,
                    ),
                    pat: Pat::Ident {
                        attrs: [],
                        by_ref: None,
                        mutability: None,
                        ident: Ident(
                            x,
                        ),
                        subpat: None,
                    },
                },
            ],
            rest: None,
        },
        guard: None,
        fat_arrow_token: FatArrow,
        body: Expr::Block {
            attrs: [],
            label: None,
            block: Block {
                brace_token: Brace,
                stmts: [],
            },
        },
        comma: None,
    },
    Arm {
        attrs: [],
        pat: Pat::TupleStruct {
            attrs: [],
            qself: None,
            path: Path {
                leading_colon: None,
                segments: [
                    PathSegment {
                        ident: Ident(
                            Bar,
                        ),
                        arguments: PathArguments::None,
                    },
                ],
            },
            paren_token: Paren,
            elems: [
                Pat::Ident {
                    attrs: [],
                    by_ref: None,
                    mutability: None,
                    ident: Ident(
                        CACHE,
                    ),
                    subpat: None,
                },
                Comma,
                Pat::Ident {
                    attrs: [],
                    by_ref: None,
                    mutability: None,
                    ident: Ident(
                        x,
                    ),
                    subpat: None,
                },
            ],
        },
        guard: None,
        fat_arrow_token: FatArrow,
        body: Expr::Block {
            attrs: [],
            label: None,
            block: Block {
                brace_token: Brace,
                stmts: [],
            },
        },
        comma: None,
    },
]
