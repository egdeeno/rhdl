Err(RHDLTypeError(RHDLTypeError { cause: PathMismatchInTypeInference, src: SourcePool { source: {FnID(a7b408c75d82794a): SpannedSource { source: "fn do_stuff(i: Signal<Option<Result>, Red>) -> Signal<Option<ResponseCode>, Red> {\n    let resp = i.val();\n    let d = match resp {\n        Some(Result::Ok(())) => Some(ResponseCode::OKAY),\n        Some(Result::Err(e)) => {\n            Some(\n                match e {\n                    AXI4Error::SLVERR => ResponseCode::SLVERR,\n                    AXI4Error::DECERR => ResponseCode::DECERR,\n                },\n            )\n        }\n        None => None,\n    };\n    signal(d)\n}\n", name: "do_stuff", span_map: {N3: 98..99, N11: 140..160, N10: 145..159, N2: 91..95, N17: 198..218, N28: 445..458, N31: 111..465, N13: 164..188, N26: 445..449, N35: 81..481, N25: 198..436, N4: 98..105, N27: 453..457, N18: 264..265, N36: 0..481, N23: 258..411, N19: 309..329, N9: 156..158, N16: 203..217, N5: 87..106, N8: 125..129, N30: 111..465, N21: 372..392, N12: 169..187, N20: 288..330, N32: 477..478, N6: 87..106, N1: 12..42, N15: 215..216, N34: 470..479, N14: 140..189, N29: 119..464, N7: 115..116, N0: 12..13, N22: 351..393, N33: 470..479, N24: 236..426}, fallback: N36, filename: "rhdl/tests/option.rs:319", function_id: FnID(a7b408c75d82794a) }}, ranges: {FnID(a7b408c75d82794a): 0..482} }, err_span: SourceSpan { offset: SourceOffset(156), length: 2 } }))