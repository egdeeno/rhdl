Err(RHDLTypeError(RHDLTypeError { cause: PathMismatchInTypeInference, src: SourcePool { source: {FnID(3a39a3a851190a5b): SpannedSource { source: "fn do_stuff(i: Signal<Option<Result>, Red>) -> Signal<Option<AXI4Error>, Red> {\n    let resp = i.val();\n    let d = match resp {\n        Some(Result::Ok(())) => Some(AXI4Error::SLVERR),\n        Some(Err(e)) => Some(e),\n        None => None,\n    };\n    signal(d)\n}\n", name: "do_stuff", span_map: {N19: 210..217, N0: 12..13, N23: 227..240, N3: 95..96, N17: 194..206, N6: 84..103, N10: 142..156, N25: 108..247, N30: 78..263, N24: 116..246, N16: 199..205, N21: 227..231, N29: 252..261, N8: 122..126, N26: 108..247, N9: 153..155, N18: 215..216, N20: 194..218, N2: 88..92, N22: 235..239, N14: 137..185, N11: 137..157, N4: 95..102, N13: 161..184, N1: 12..42, N12: 166..183, N31: 0..263, N7: 112..113, N15: 203..204, N5: 84..103, N27: 259..260, N28: 252..261}, fallback: N31, filename: "rhdl/tests/option.rs:357", function_id: FnID(3a39a3a851190a5b) }}, ranges: {FnID(3a39a3a851190a5b): 0..264} }, err_span: SourceSpan { offset: SourceOffset(153), length: 2 } }))